buildscript {
	ext {
		springBootVersion = '2.1.4.RELEASE'
		palantirVersion='0.20.1'
	}
	repositories {
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/"   }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "gradle.plugin.com.palantir.gradle.docker:gradle-docker:${palantirVersion}"
	}
}



plugins {
	id 'org.springframework.boot' version '2.1.4.RELEASE'
	id 'java'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'

group = 'org.sj'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', 'Greenwich.SR1')
}

bootJar {
    baseName = 'ms-oauth2-server'
    version =  '0.1.0'
}
dependencies {
	
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-oauth2'
	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-jwt
	compile group: 'org.springframework.security', name: 'spring-security-jwt', version: '1.0.10.RELEASE'
	// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
		// https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jdk8
	compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: '2.9.8'
		// https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api
	compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
		// https://mvnrepository.com/artifact/com.sun.xml.bind/jaxb-impl
	compile group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.3.2'
		// https://mvnrepository.com/artifact/com.sun.xml.bind/jaxb-core
	compile group: 'com.sun.xml.bind', name: 'jaxb-core', version: '2.3.0.1'
		// https://mvnrepository.com/artifact/javax.activation/activation
	compile group: 'javax.activation', name: 'activation', version: '1.1.1'
	// https://mvnrepository.com/artifact/org.springframework.security.oauth/spring-security-oauth2
	compile group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: '2.3.5.RELEASE'
	// https://mvnrepository.com/artifact/com.github.ulisesbocchio/jasypt-spring-boot-starter
	compile group: 'com.github.ulisesbocchio', name: 'jasypt-spring-boot-starter', version: '2.1.1'
	
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

task unpack(type: Copy) {
    dependsOn bootJar
    from(zipTree(tasks.bootJar.outputs.files.singleFile))
    into("build/dependency")
}
docker {
    name "${project.group}/${bootJar.baseName}"
    copySpec.from(tasks.unpack.outputs).into("dependency")
    buildArgs(['DEPENDENCY': "dependency"])
}

